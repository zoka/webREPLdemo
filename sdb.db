{:post-monikers {"welcome-to-ringmon-middleware-demo" "0"}, :post-ids ("0"), :posts {"0" {:ts 1331343543923, :md-body "<p>The ringMon is Ring  middleware that adds remote diagnostic and REPL interaction capability to Clojure web applications that are based on Ring library or higher level web frameworks such as Noir or Compojure.</p>\n\n<p>It injects single monitoring page at  /ringmon/monview.html.</p>\n\n<p>The page displays raw JMX data of interest in a tree like structure. It also shows\nderived values such as CpuLoad that is calculated by sampling JMX/OperatingSystem.ProcessCpuTime every 2 seconds and and Ajax requests statistics.</p>\n\n<p>Moreover, the page provides full featured nREPL front end,  with sytnax coloured editor, command history and persistent sessions. The actual nREPL server runs as a part of this application. The ringMon web page uses AJAX to submit Clojure forms from input window displaying nREPL response in a separate output window, It is even possible to interrupt submitted script execution.</p>\n\n<p>This demo blog (noirMon) is based on  Chris Granger's https://github.com/ibdknox/Noir-blog example application for his Noir web framework. </p>\n\n<p>Only small amount of changes was required to add ringMon capability to this application:</p>\n\n<p>include   [noirmon \"0.1.0-SNAPSHOT\"] in project.clj</p>\n\n<p>add the middleware itself before starting the server:</p>\n\n<pre><code>   (server/add-middleware monitor/wrap-ring-monitor)\n</code></pre>\n\n<p>You can best view the startup source if you enter the following into  nREPL input window and press Ctrl-Enter:</p>\n\n<p>(use 'noirmon.server)\n(source -main)</p>\n", :date "03/10/12", :tme "12:39PM", :moniker "welcome-to-ringmon-middleware-demo", :title "Welcome to ringMon middleware demo", :perma-link "/blog/view/welcome-to-ringmon-middleware-demo", :username "zoka", :body "The ringMon is Ring  middleware that adds remote diagnostic and REPL interaction capability to Clojure web applications that are based on Ring library or higher level web frameworks such as Noir or Compojure.\r\n\r\nIt injects single monitoring page at  /ringmon/monview.html.\r\n\r\nThe page displays raw JMX data of interest in a tree like structure. It also shows\r\nderived values such as CpuLoad that is calculated by sampling JMX/OperatingSystem.ProcessCpuTime every 2 seconds and and Ajax requests statistics.\r\n\r\nMoreover, the page provides full featured nREPL front end,  with sytnax coloured editor, command history and persistent sessions. The actual nREPL server runs as a part of this application. The ringMon web page uses AJAX to submit Clojure forms from input window displaying nREPL response in a separate output window, It is even possible to interrupt submitted script execution.\r\n\r\nThis demo blog (noirMon) is based on  Chris Granger's https://github.com/ibdknox/Noir-blog example application for his Noir web framework. \r\n\r\nOnly small amount of changes was required to add ringMon capability to this application:\r\n\r\ninclude   [noirmon \"0.1.0-SNAPSHOT\"] in project.clj\r\n\r\nadd the middleware itself before starting the server:\r\n\r\n       (server/add-middleware monitor/wrap-ring-monitor) \r\n \r\n\r\n\r\nYou can best view the startup source if you enter the following into  nREPL input window and press Ctrl-Enter:\r\n\r\n(use 'noirmon.server)\r\n(source -main)", :id "0"}}, :next-post-id 0, :users {"zoka" {:username "zoka", :password "$2a$10$jIUNBhDkTI6lX7uU9PhmLupLSJERDV3BAJIojGKLEOlu8VDDsXSvy"}, "admin" {:username "admin", :password "$2a$10$TZyDKHhuHvHDxi4ISTIhZ.fO4PShd1isQPjnydUDRZ/vX0MrcFmO6"}}}